// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using serwis_drugi;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240130110200_AddNewFieldNazwa")]
    partial class AddNewFieldNazwa
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.15");

            modelBuilder.Entity("serwis_drugi.Czesc", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazwa2")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Czesci");
                });

            modelBuilder.Entity("serwis_drugi.Klient", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RodzajProblemu")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Klienci");
                });

            modelBuilder.Entity("serwis_drugi.Naprawa", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Koszt")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RowerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("RowerId");

                    b.ToTable("Naprawy");
                });

            modelBuilder.Entity("serwis_drugi.Narzedzie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Rodzaj")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Wytrzymalosc")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("Narzedzia");
                });

            modelBuilder.Entity("serwis_drugi.PracownikSerwisu", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Doswiadczenie")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("PracownicySerwisu");
                });

            modelBuilder.Entity("serwis_drugi.Rower", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataPrzyjecia")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Rowery");
                });

            modelBuilder.Entity("serwis_drugi.Naprawa", b =>
                {
                    b.HasOne("serwis_drugi.Rower", "Rower")
                        .WithMany()
                        .HasForeignKey("RowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rower");
                });
#pragma warning restore 612, 618
        }
    }
}
